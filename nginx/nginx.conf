# Basic Nginx worker and event settings
user nginx;
worker_processes auto; # Can be set to the number of CPU cores
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # Max connections per worker
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Enable Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Define an upstream for the Django backend application
    # 'backend' is the service name defined in docker-compose.yml
    # Port 8000 is where Gunicorn is listening inside the backend container
    upstream django_backend {
        server backend:8000;
    }

    server {
        listen 80 default_server;
        # listen 443 ssl http2 default_server; # Uncomment for HTTPS
        # server_name yourdomain.com www.yourdomain.com; # Replace with your domain

        # SSL Configuration (Uncomment and configure if using HTTPS)
        # ssl_certificate /etc/nginx/certs/yourdomain.com.crt;
        # ssl_certificate_key /etc/nginx/certs/yourdomain.com.key;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_prefer_server_ciphers on;
        # ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
        # ssl_session_cache shared:SSL:10m;
        # ssl_session_timeout 1d;
        # ssl_stapling on;
        # ssl_stapling_verify on;
        # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # Path for Django static files (e.g., /static/admin/)
        # Assumes backend_static_collected volume is mounted at /var/www/django_static in nginx service
        location /static/ {
            alias /var/www/django_static/;
            expires 7d; # Cache static files for 7 days
            access_log off; # Disable access logging for static files
        }

        # Path for Django media files (e.g., user-uploaded content)
        # Assumes backend_media_data volume is mounted at /var/www/media in nginx service
        location /media/ {
            alias /var/www/media/;
            expires 7d; # Cache media files for 7 days
            access_log off;
        }

        # Location for API requests to be proxied to the Django backend
        location /api/ {
            proxy_pass http://django_backend; # Forward to the upstream defined above
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_buffering off; # Useful for streaming responses or Server-Sent Events
            # Add other proxy headers if needed by your application
        }

        # Location for serving the frontend static assets (Vue.js app)
        # Assets are copied to /usr/share/nginx/html in the multi-stage Dockerfile
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html; # For SPA routing: try file, then directory, then fallback to index.html
            expires -1; # Do not cache index.html to ensure users get the latest app version

            # Security headers
            # add_header X-Frame-Options "SAMEORIGIN" always;
            # add_header X-Content-Type-Options "nosniff" always;
            # add_header X-XSS-Protection "1; mode=block" always;
            # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            # add_header Content-Security-Policy "default-src 'self'; ..." always; # Define your CSP
        }

        # Optional: Add specific error pages or other configurations
        # error_page 500 502 503 504 /50x.html;
        # location = /50x.html {
        #     root /usr/share/nginx/html; # Default Nginx error page location
        # }
    }
} 