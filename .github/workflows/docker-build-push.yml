name: Build and Push Docker Image

# Diese Pipeline startet bei:
on:
  push:
    branches:
      - main  # Nur bei pushes auf main branch
    paths:
      - 'Dockerfile'          # Oder Änderungen am Dockerfile
      - '.github/workflows/**' # Oder an den Workflows selbst
      - 'scripts/**'          # Oder an den Scripts
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Manueller Trigger via GitHub UI

# Umgebungsvariablen
env:
  DOCKER_IMAGE_NAME: simpleseccheck
  DOCKER_USERNAME: fr4iser

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Code auschecken
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Metadaten setzen (für bessere Beschriftungen)
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      # 3. Setup Docker Buildx (für Multi-Arch Support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Login zu Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Build und Push
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            VERSION=1.1.0

      # 6. Image-Details anzeigen (optional)
      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}

