services:
  scanner:
    # Use pre-built image from Docker Hub, or uncomment below to build locally
    image: fr4iser/simpleseccheck:latest
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   args:
    #     VERSION: 1.1.0
    container_name: SimpleSecCheck_scanner_v1.1.0
    volumes:
      - ./results:/SimpleSecCheck/results
      - ./logs:/SimpleSecCheck/logs
      - ./conf:/SimpleSecCheck/conf
      - ./rules:/SimpleSecCheck/rules
      - ./trivy:/SimpleSecCheck/trivy
      - ./anchore:/SimpleSecCheck/anchore
      - ./zap:/SimpleSecCheck/zap
      # OWASP Dependency Check data directory - cached to avoid re-downloading 300K+ vulnerabilities on every build
      - ./owasp-dependency-check-data:/SimpleSecCheck/owasp-dependency-check-data
      - /var/run/docker.sock:/var/run/docker.sock # For Docker Bench
    environment:
      - TARGET_URL=${TARGET_URL:-http://host.docker.internal:8000}
      - TARGET_PATH_IN_CONTAINER=${TARGET_PATH_IN_CONTAINER:-/target}
      - RESULTS_DIR_IN_CONTAINER=/SimpleSecCheck/results
      - LOGS_DIR_IN_CONTAINER=/SimpleSecCheck/logs
      - SEMGREP_RULES_PATH_IN_CONTAINER=/SimpleSecCheck/rules
      - TRIVY_CONFIG_PATH_IN_CONTAINER=/SimpleSecCheck/trivy/config.yaml
      - ANCHORE_CONFIG_PATH_IN_CONTAINER=/SimpleSecCheck/anchore/config.yaml
      - ANCHORE_IMAGE=${ANCHORE_IMAGE:-}
      - ZAP_CONFIG_PATH_IN_CONTAINER=/SimpleSecCheck/zap/baseline.conf
      - TRIVY_SCAN_TYPE=fs
      - FP_WHITELIST_FILE=/SimpleSecCheck/conf/fp_whitelist.json
      # Optional API Tokens (loaded from .env file if present)
      - NVD_API_KEY=${NVD_API_KEY:-}
      - SNYK_TOKEN=${SNYK_TOKEN:-}
    networks:
      - SimpleSecCheck_network
    restart: "no"
    stdin_open: true
    tty: true

networks:
  SimpleSecCheck_network:
    driver: bridge

volumes:
  results_data:
  logs_data:
