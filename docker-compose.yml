version: '3.8'

services:
  seculite:
    build: .
    image: seculite:latest
    container_name: seculite
    env_file:
      - .env
    environment:
      - ZAP_TARGET=${TARGET_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - OPENAI_ENDPOINT=${OPENAI_ENDPOINT}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL}
      - GEMINI_ENDPOINT=${GEMINI_ENDPOINT}
      - HF_API_KEY=${HF_API_KEY}
      - HF_MODEL=${HF_MODEL}
      - HF_ENDPOINT=${HF_ENDPOINT}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_MODEL=${GROQ_MODEL}
      - GROQ_ENDPOINT=${GROQ_ENDPOINT}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - MISTRAL_MODEL=${MISTRAL_MODEL}
      - MISTRAL_ENDPOINT=${MISTRAL_ENDPOINT}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL}
      - ANTHROPIC_ENDPOINT=${ANTHROPIC_ENDPOINT}
      - LLM_PROVIDER=${LLM_PROVIDER}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ${REPORT_PATH}:/seculite/results
      - ${LOG_PATH}:/seculite/logs
      - ${TARGET_PATH}:/target:ro
    networks:
      - ${DOCKER_NETWORK}

  zap-webui:
    image: seculite:latest
    container_name: zap-webui
    env_file:
      - .env
    entrypoint:
      - /opt/ZAP_2.16.1/zap.sh
      - -daemon
      - -host
      - 0.0.0.0
      - -port
      - "${ZAP_WEBUI_PORT}"
      - -config
      - api.addrs.addr.name=.*
      - -config
      - api.addrs.addr.regex=true
      - -config
      - api.disablekey=true
    ports:
      - "${ZAP_WEBUI_PORT}:${ZAP_WEBUI_PORT}"
    volumes:
      - ${REPORT_PATH}:/seculite/results
      - ${LOG_PATH}:/seculite/logs
      - ${TARGET_PATH}:/target:ro
    networks:
      - ${DOCKER_NETWORK}

  web:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["python3", "web/app.py"]
    volumes:
      - ./results:/results
      - ./scripts:/scripts
    ports:
      - "5000:5000"
    working_dir: /seculite
    depends_on:
      - seculite
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - OPENAI_ENDPOINT=${OPENAI_ENDPOINT}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL}
      - GEMINI_ENDPOINT=${GEMINI_ENDPOINT}
      - HF_API_KEY=${HF_API_KEY}
      - HF_MODEL=${HF_MODEL}
      - HF_ENDPOINT=${HF_ENDPOINT}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_MODEL=${GROQ_MODEL}
      - GROQ_ENDPOINT=${GROQ_ENDPOINT}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - MISTRAL_MODEL=${MISTRAL_MODEL}
      - MISTRAL_ENDPOINT=${MISTRAL_ENDPOINT}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL}
      - ANTHROPIC_ENDPOINT=${ANTHROPIC_ENDPOINT}
      - LLM_PROVIDER=${LLM_PROVIDER}

networks:
  bridge:
    driver: bridge
